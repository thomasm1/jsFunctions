{"version":3,"sources":["dataCalculators/consecDays.js"],"names":["console","log","bestBitcoinWeek","arr","num","maxSum","tempSum","length","i","Math","max","dailyNet","dailyNetFull","fetchBitcoin2019","fetch","bitcoinPromise","json","bitcoin2019","Close","Open","push"],"mappings":"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","file":"consecDays.e1fbad1f.js","sourceRoot":"..","sourcesContent":["\r\nconsole.log(\"%c Calculations: 7-day Profits\", \"color:orange; background:black; border:solid 1px orange\")\r\n/* O(n) */\r\nfunction bestBitcoinWeek(arr, num) {\r\n    \r\n    let maxSum = 0;\r\n    let tempSum = 0;\r\n    if (arr.length < num) return null;\r\n    for (let i = 0; i < num; i++) { // get up to first subWindow\r\n        maxSum += arr[i];\r\n    }\r\n    tempSum = maxSum;\r\n    for (let i = num; i < arr.length; i++) {\r\n        tempSum = tempSum - arr[i - num] + arr[i]; // moving window\r\n        maxSum = Math.max(maxSum, tempSum);\r\n    } \r\n    console.log(\"Best 7-day, total profit: \" +  maxSum)\r\n\r\n    maxSum /= 7; // average week's sum profit to a daily average\r\n    console.log(\"Best 7-day, daily avg profit: \" +  maxSum)\r\n\r\n    return maxSum\r\n}\r\n\r\n// Best Bitcoin Week  \r\nlet dailyNet = [];\r\nlet dailyNetFull = [];\r\nasync function fetchBitcoin2019() {\r\n\r\n    const bitcoinPromise = await fetch(\r\n        // \"Coinbase_LTCUSD_2019.json\"\r\n        \"https://tmm-nov.s3.amazonaws.com/data/coins/BTCUSD_2019.json\"\r\n        );\r\n    \r\n    const bitcoin2019  = await bitcoinPromise.json();\r\n    console.log(\"Raw downloaded data \", bitcoin2019);\r\n    for (let i = 0; i < bitcoin2019.length; i++) {\r\n        dailyNet[i] = bitcoin2019[i].Close - bitcoin2019[i].Open; // Day's gain/loss \r\n        dailyNetFull.push(dailyNet[i]) \r\n\r\n        dailyNet[i] = (dailyNet[i] <= 0) ? 0 : dailyNet[i]; // negative days kept in array, as \"0\"... \r\n        dailyNet.push(dailyNet[i])\r\n    }\r\n    console.log(\"Array treating neg days as 0\", dailyNet)\r\n\r\n    console.log(\"**Includes negative values\")  \r\n    bestBitcoinWeek(dailyNetFull, 7)\r\n    console.log(\"**Treats neg days as 0: \");  \r\n    bestBitcoinWeek(dailyNet, 7);  \r\n\r\n    return dailyNetFull \r\n} \r\nfetchBitcoin2019();\r\n\r\n//  console.log(\"[outside fx]-ready for calcs...days net gain/loss: \", dailyNet);\r\n \r\n// async function asyncCalc(array) {\r\n\r\n//     const arr = await array;\r\n//     bestBitcoinWeek(arr, 7); \r\n// }\r\n// asyncCalc(dailyNet);\r\n\r\n\r\n// /* O(n) */\r\n// function maxSubarraySum(arr, num) {\r\n//     let maxSum = 0;\r\n//     let tempSum = 0;\r\n//     if (arr.length < num) return null;\r\n//     for (let i = 0; i < num; i++) { // get up to first subWindow\r\n//         maxSum += arr[i];\r\n//     }\r\n//     tempSum = maxSum;\r\n//     for (let i = num; i < arr.length; i++) {\r\n//         tempSum = tempSum - arr[i - num] + arr[i]; // moving window\r\n//         maxSum = Math.max(maSum, tempSum);\r\n//     }\r\n\r\n// }\r\n\r\n\r\n// /* O(n^2) */\r\n// function maxSubarraySumNaive(arr, num) {\r\n//     if (num > arr.length) {\r\n//         return null;\r\n//     }\r\n//     var max = -Infinity;\r\n//     for (let i = 0; i < arr.length - num + 1; i++) {\r\n//         temp = 0;\r\n//         for (let j = 0; j < num; j++) {\r\n//             temp += arr[i + j];\r\n//         }\r\n//         if (temp > max) {\r\n//             max = temp;\r\n//         }\r\n//     }\r\n//     return max;\r\n// }\r\n\r\n// var t1 = performance.now();\r\n// maxSubarraySumNaive([2, 6, 9, 2, 1, 8, 5, 6, 3], 3)\r\n// var t2 = performance.now();\r\n// console.log(`NaiveTime: ${(t2 - t1) / 1000} seconds.`);\r\n\r\n// var t1 = performance.now();\r\n// maxSubarraySum([2, 6, 9, 2, 1, 8, 5, 6, 3], 3)\r\n// var t2 = performance.now();\r\n// console.log(`FastTime: ${(t2 - t1) / 1000} seconds.`); \r\n"]}