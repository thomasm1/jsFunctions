{"version":3,"sources":["dataStructures/dataHashTable.js"],"names":["console","log","hash","string","max","i","length","charCodeAt","HashTable","storage","storageLimit","print","add","key","value","index","undefined","inserted","push","remove","lookup","ht"],"mappings":"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","file":"dataHashTable.5eab0537.js","sourceRoot":"..","sourcesContent":["// HashTable\r\nconsole.log(\"%c HASH TABLE: \", \"color:white; background-color:orange\");\r\n\r\nvar hash = (string, max) => {\r\n  var hash = 0;\r\n  for (var i = 0; i < string.length; i++) {\r\n    hash += string.charCodeAt(i);\r\n  }\r\n  return hash % max;\r\n};\r\n\r\nlet HashTable = function() {\r\n  let storage = [];\r\n  const storageLimit = 4;\r\n\r\n  this.print = function() {\r\n    console.log(storage);\r\n  };\r\n\r\n  this.add = function(key, value) {\r\n    var index = hash(key, storageLimit);\r\n    if (storage[index] === undefined) {\r\n      storage[index] = [[key, value]];\r\n    } else {\r\n      var inserted = false;\r\n      for (var i = 0; i < storage[index].length; i++) {\r\n        if (storage[index][i][0] === key) {\r\n          storage[index][i][1] = value;\r\n          inserted = true;\r\n        }\r\n      }\r\n      if (inserted === false) {\r\n        storage[index].push([key, value]);\r\n      }\r\n    }\r\n  }; // end add fx\r\n\r\n  this.remove = function(key) {\r\n    var index = hash(key, storageLimit);\r\n    if (storage[index].length === 1 && storage[index][0][0] === key) {\r\n      delete storage[index];\r\n    } else {\r\n      for (var i = 0; i < storage[index]; i++) {\r\n        if (storage[index][i][0] === key) {\r\n          delete storage[index][i];\r\n        }\r\n      }\r\n    }\r\n  }; // end remove fx\r\n\r\n  this.lookup = function(key) {\r\n    var index = hash(key, storageLimit);\r\n    if (storage[index] === undefined) {\r\n      return undefined;\r\n    } else {\r\n      for (var i = 0; i < storage[index].length; i++) {\r\n        if (storage[index][i][0] === key) {\r\n          return storage[index][i][1];\r\n        }\r\n      }\r\n    }\r\n  }; //end lookup fx\r\n}; // END Hash fx\r\n\r\nconsole.log(hash(\"thomas\", 10));\r\nlet ht = new HashTable();\r\nht.add(\"alpha\", \"one\");\r\nht.add(\"beta\", \"two\");\r\nht.add(\"gamma\", \"three\");\r\nht.add(\"delta\", \"four\");\r\nht.add(\"epsilon\", \"five\");\r\nconsole.log(ht.lookup(\"gamma\"));\r\nht.print();\r\n"]}